{"version":3,"sources":["select.min.js","select/select.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","prefixEvent","placement","template","trigger","container","keyboard","html","delay","multiple","allNoneButtons","sort","caretHtml","placeholder","maxLength","maxLengthHtml","iconCheckmark","$get","$window","$document","$rootScope","$tooltip","$timeout","SelectFactory","element","controller","config","$select","options","extend","scope","$scope","$matches","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$activate","index","$$postDigest","activate","evt","select","$isVisible","$isActive","$selectAll","i","length","$selectNone","update","matches","$updateActiveIndex","splice","indexOf","push","value","$apply","$setViewValue","map","hide","$emit","$modelValue","isArray","$getIndex","minLength","$viewValue","l","$onMouseDown","preventDefault","stopPropagation","isTouch","targetEl","target","triggerHandler","$onKeyDown","test","keyCode","isUndefined","$digest","_show","show","$element","addClass","on","_hide","off","isNative","document","body","navigator","userAgent","directive","$parse","$q","$parseOptions","restrict","require","link","attr","forEach","key","isDefined","nodeName","toLowerCase","inputEl","css","after","parsedOptions","ngOptions","watchedOptions","$match","replace","trim","$watch","newValue","oldValue","valuesFn","then","values","$render","ngModel","selected","label","filter","join","$isEmpty","$on","destroy"],"mappings":"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","file":"select.min.js","sourcesContent":[null,"'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      template: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok'\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n\r\n      function SelectFactory(element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        scope.$activeIndex = 0;\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function(index) {\r\n          return $select.$isActive(index);\r\n        };\r\n\r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function(matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function(index) {\r\n          if(options.multiple) {\r\n            scope.$activeIndex.sort();\r\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\r\n            if(options.sort) scope.$activeIndex.sort();\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function() {\r\n            $select.activate(index);\r\n            if(options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              controller.$setViewValue(value);\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function() {\r\n          if(controller.$modelValue && scope.$matches.length) {\r\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            }\r\n          } else if(scope.$activeIndex >= scope.$matches.length) {\r\n            scope.$activeIndex = options.multiple ? [] : 0;\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function(index) {\r\n          if(options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          } else {\r\n            return scope.$activeIndex === index;\r\n          }\r\n        };\r\n\r\n        $select.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $select.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function(evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Select with enter\r\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n          scope.$digest();\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function() {\r\n          _show();\r\n          if(options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function() {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          }, 0, false);\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function() {\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, placeholder: defaults.placeholder};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Add support for select markup\r\n        if(element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper ngOptions\r\n        var parsedOptions = $parseOptions(attr.ngOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        // Watch ngOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watch(watchedOptions, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n          parsedOptions.valuesFn(scope, controller)\r\n          .then(function(values) {\r\n            select.update(values);\r\n            controller.$render();\r\n          });\r\n        }, true);\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\r\n          select.$updateActiveIndex();\r\n          controller.$render();\r\n        }, true);\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected, index;\r\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function(value) {\r\n              index = select.$getIndex(value);\r\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n          }\r\n          element.html((selected ? selected : options.placeholder) + defaults.caretHtml);\r\n        };\r\n\r\n        if(options.multiple){\r\n          controller.$isEmpty = function(value){\r\n            return !value || value.length === 0;\r\n          };\r\n        }\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (select) select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}