{"version":3,"sources":["tab.min.js","tab/tab.js"],"names":["angular","module","provider","defaults","this","animation","template","navClass","activeClass","controller","$scope","$element","$attrs","self","$options","copy","forEach","key","isDefined","$navClass","$activeClass","$panes","$activePaneChangeListeners","$viewChangeListeners","$push","pane","push","$remove","index","indexOf","activeIndex","$active","splice","length","$setActive","value","fn","$get","$tab","directive","$window","$animate","$parse","require","transclude","scope","templateUrl","element","attr","link","attrs","controllers","ngModelCtrl","bsTabsCtrl","console","warn","$setViewValue","$formatters","modelValue","bsActivePane","parsedBsActivePane","assign","$watch","newValue","oldValue","$sce","render","active","addClass","$observe","title","trustAsHtml","$on"],"mappings":"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","file":"tab.min.js","sourcesContent":[null,"'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.tab', [])\r\n\r\n  .provider('$tab', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      template: 'tab/tab.tpl.html',\r\n      navClass: 'nav-tabs',\r\n      activeClass: 'active'\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      // Publish options on scope\r\n      $scope.$navClass = self.$options.navClass;\r\n      $scope.$activeClass = self.$options.activeClass;\r\n\r\n      self.$panes = $scope.$panes = [];\r\n\r\n      // DEPRECATED: $viewChangeListeners, please use $activePaneChangeListeners\r\n      // Because we deprecated ngModel usage, we rename viewChangeListeners to \r\n      // activePaneChangeListeners to make more sense.\r\n      self.$activePaneChangeListeners = self.$viewChangeListeners = [];\r\n\r\n      self.$push = function(pane) {\r\n        self.$panes.push(pane);\r\n      };\r\n\r\n      self.$remove = function(pane) {\r\n        var index = self.$panes.indexOf(pane);\r\n        var activeIndex = self.$panes.$active;\r\n\r\n        // remove pane from $panes array\r\n        self.$panes.splice(index, 1);\r\n\r\n        if (index < activeIndex) {\r\n          // we removed a pane before the active pane, so we need to \r\n          // decrement the active pane index\r\n          activeIndex--;\r\n        }\r\n        else if (index === activeIndex && activeIndex === self.$panes.length) {\r\n          // we remove the active pane and it was the one at the end,\r\n          // so select the previous one\r\n          activeIndex--;\r\n        }\r\n        self.$setActive(activeIndex);\r\n      };\r\n\r\n      self.$panes.$active = 0;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        self.$panes.$active = value;\r\n        self.$activePaneChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $tab = {};\r\n      $tab.defaults = defaults;\r\n      $tab.controller = controller;\r\n      return $tab;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTabs', function($window, $animate, $tab, $parse) {\r\n\r\n    var defaults = $tab.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsTabs'],\r\n      transclude: true,\r\n      scope: true,\r\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\r\n      templateUrl: function(element, attr) {\r\n        return attr.template || defaults.template;\r\n      },\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        // DEPRECATED: ngModel, please use bsActivePane\r\n        // 'ngModel' is deprecated bacause if interferes with form validation\r\n        // and status, so avoid using it here.\r\n        if(ngModelCtrl) {\r\n          console.warn('Usage of ngModel is deprecated, please use bsActivePane instead!');\r\n\r\n          // Update the modelValue following\r\n          bsTabsCtrl.$activePaneChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            bsTabsCtrl.$setActive(modelValue * 1);\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n        if (attrs.bsActivePane) {\r\n          // adapted from angularjs ngModelController bindings\r\n          // https://github.com/angular/angular.js/blob/v1.3.1/src%2Fng%2Fdirective%2Finput.js#L1730\r\n          var parsedBsActivePane = $parse(attrs.bsActivePane);\r\n\r\n          // Update bsActivePane value with change\r\n          bsTabsCtrl.$activePaneChangeListeners.push(function() {\r\n            parsedBsActivePane.assign(scope, bsTabsCtrl.$panes.$active);\r\n          });\r\n\r\n          // watch bsActivePane for value changes\r\n          scope.$watch(attrs.bsActivePane, function(newValue, oldValue) {\r\n            bsTabsCtrl.$setActive(newValue * 1);\r\n          }, true);\r\n        }\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsPane', function($window, $animate, $sce) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsTabs'],\r\n      scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('tab-pane');\r\n\r\n        // Observe title attribute for change\r\n        attrs.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n        });\r\n\r\n        // Add animation class\r\n        if(bsTabsCtrl.$options.animation) {\r\n          element.addClass(bsTabsCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsTabs controller\r\n        bsTabsCtrl.$push(scope);\r\n\r\n        // remove pane from tab controller when pane is destroyed\r\n        scope.$on('$destroy', function() {\r\n          bsTabsCtrl.$remove(scope);\r\n        });\r\n\r\n        function render() {\r\n          var index = bsTabsCtrl.$panes.indexOf(scope);\r\n          var active = bsTabsCtrl.$panes.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsTabsCtrl.$activePaneChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}